---
hero: true
social: true
catcher: false

title: Gobot - Golang framework for robotics, drones, and the Internet of Things (IoT)
author: The Hybrid Group
description: Gobot is a framework for robotics, drones, and the Internet of Things (IoT), written in the <span> Go programming language</span>.
layout: home

hero_title: "<span>Go, Robot, Go!</span> <br> Golang Powered Robotics"
hero_subtitle: "Next generation robotics/IoT framework with support for <a class='platforms-number' href='#platforms'>35 different platforms</a>"

img_character: "<img src='images/elements/gophy.png'>"

catcher_phrase: Ready to build your IoT application, robot, or drone using Golang?
getting_started_button: "<a href='/documentation/getting-started' class='call-to-action'>Start Now</a>"
---
%section.the-code
  :markdown
    ## Meet The Code

    Gobot makes controlling robots and devices incredibly simple and fun.

    All you need to get started is to install Gobot:

        $ go get -d -u gobot.io/x/gobot/...

    ## The "Hello, World" Of Things

    This program connects to an [Arduino][], and toggles an [LED][], every one second.

    [Arduino]: /documentation/platforms/arduino
    [LED]: /documentation/drivers/led

        :::go
        package main

        import (
          "time"

          "gobot.io/x/gobot"
          "gobot.io/x/gobot/drivers/gpio"
          "gobot.io/x/gobot/platforms/firmata"
        )

        func main() {
          firmataAdaptor := firmata.NewAdaptor("/dev/ttyACM0")
          led := gpio.NewLedDriver(firmataAdaptor, "13")

          work := func() {
            gobot.Every(1*time.Second, func() {
              led.Toggle()
            })
          }

          robot := gobot.NewRobot("bot",
            []gobot.Connection{firmataAdaptor},
            []gobot.Device{led},
            work,
          )

          robot.Start()
        }

    We've got many more [examples][] to help you get started on your next IoT project!

    [examples]: /documentation/examples

%section.gobot-platforms
  %h2#platforms Platform Support

  %p
    Gobot has a extensible system for connecting to hardware devices.
    The following robotics and physical computing platforms are currently supported:

    %h2
      = "#{ data.platforms.length } Platforms"

    %ul.platform-list
      - data.platforms.each do |name, data|
        %li.platform
          %a{:href => "/documentation/platforms/#{data.slug}"}
            %p.title= name
            %img{src: "/images/devices/#{data.slug}.jpg", style: "width: 90%"}

    .clear

  %h2
    = link_to "#{data.drivers.GPIO.length} GPIO drivers", "https://en.wikipedia.org/wiki/General_Purpose_Input/Output" , target:"_blank"

  %p Support for devices that use General Purpose Input/Output (GPIO) communication have a shared set of drivers provided using the "gobot/drivers/gpio" package:

  %ul.platform-list
    - data.drivers.GPIO.each do |name, slug|
      %li.platform
        %a{:href => "/documentation/drivers/#{slug}"}
          %p.title= name
          %img{src: "/images/devices/#{slug}.jpg", style: "width: 90%"}
  .clear

  %h2
    = link_to "#{data.drivers.AIO.length} Analog I/O (AIO) drivers", "https://en.wikipedia.org/wiki/General_Purpose_Input/Output" , target:"_blank"

  %p Support for devices that use Analog Input/Output (AIO) communication have a shared set of drivers provided using the "gobot/drivers/aio" package:

  %ul.platform-list
    - data.drivers.AIO.each do |name, slug|
      %li.platform
        %a{:href => "/documentation/drivers/#{slug}"}
          %p.title= name
          %img{src: "/images/devices/#{slug}.jpg", style: "width: 90%"}
  .clear

  %h2
    = link_to "#{data.drivers.I2C.length} I2C drivers", "https://en.wikipedia.org/wiki/I%C2%B2C", target:"_blank"

  %p Support for devices that use Inter-Integrated Circuit (I2C) communication have a shared set of drivers provided using the "gobot/drivers/i2c" package:

  %ul.platform-list
    - data.drivers.I2C.each do |name, slug|
      %li.platform
        %a{:href => "/documentation/drivers/#{slug}"}
          %p.title= name
          %img{src: "/images/devices/#{slug}.jpg", style: "width: 90%"}

  %h2
    = link_to "#{data.drivers.SPI.length} SPI drivers", "https://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus", target:"_blank"

  %p Support for devices that use Serial Peripheral Interface (SPI) communication have a shared set of drivers provided using the "gobot/drivers/spi" package:

  %ul.platform-list
    - data.drivers.SPI.each do |name, slug|
      %li.platform
        %a{:href => "/documentation/drivers/#{slug}"}
          %p.title= name
          %img{src: "/images/devices/#{slug}.jpg", style: "width: 90%"}

%section.api
  %h2 API
  %p
    Gobot includes a RESTful API
    to query the status of any connection, device or
    robot running in your swarm. It additionally has the ability to issue
    commands directly to your devices and robots.

    Check out
    = link_to "http://cppp.io", "http://cppp.io", target: :blank
    for more information.

  %p
    It also comes with the
    = link_to "robeaux", "https://github.com/hybridgroup/robeaux", target: :blank
    React.JS interface baked right into its API server for quick and easy
    configuration.

    <img src="/images/screenshots/robeaux.png" style="margin-top: 15px; width: 100%">

  %p
    You can check out more information on the Gobot API in the docs
    = link_to "here", "/documentation/core/api", target: :blank


%section.cli
  :markdown
    ## CLI

    <script src="https://asciinema.org/a/10306.js" id="asciicast-10306"></script>

    Gobot is designed to be using in conjunction with [Gort][], a Command Line Toolkit (CLI) for RobotOps. Gort provides tools to scan for connected devices, upload firmware, and it works perfectly with Gobot. Also included with Gobot is a CLI for generating new robots and adaptors.

    Gobot also has it own CLI which you can learn more about [here][cli-docs].

    [Gort]: http://gort.io
    [cli-docs]: /documentation/guides/cli

  :markdown
    ## Be Part Of The Robot Evolution

    - Code on Github:   [https://github.com/hybridgroup/gobot](https://github.com/hybridgroup/gobot)
    - Slack: [https://gophers.slack.com/messages/C0N5HDB08](https://gophers.slack.com/messages/C0N5HDB08)
    - Twitter: [@gobotio](https://twitter.com/gobotio)
